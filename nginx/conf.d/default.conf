server {
    listen 80;
    server_name $SERVER_NAME;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name $SERVER_NAME;
    charset utf-8;
    index index.php;
    root /var/www/html;
    client_max_body_size 30M;
    fastcgi_buffering off;
    fastcgi_request_buffering off;

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types
        application/javascript application/json application/xml application/xml+rss application/x-font-woff
        font/woff2 font/woff font/otf font/ttf
        text/javascript text/css text/plain text/xml;

    ssl_certificate /etc/nginx/server.crt;
    ssl_certificate_key /etc/nginx/server.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Remove repeating slashes from URL
    if ($uri ~ ^[^?]*//) {
        return 301 $scheme://$http_host$uri;
    }

    # Redirect www to non-www
    if ($host ~* ^www\.(.*)$) {
        return 301 $scheme://$1$request_uri;
    }

    # Remove trailing slash from URL
    if ($uri ~ "^/((?!core|connectors|manager|setup).*)/$") {
        rewrite ^/(.*)/$ $scheme://$http_host/$1 permanent;
    }

    # Redirect index.php to root
    if ($request_uri ~* ^/index\.php(\?(.*))?$) {
        return 301 $scheme://$http_host/$is_args$2;
    }

    # Static files processing
    location ~* ^.+\.(jpg|jpeg|gif|css|png|webp|js|ico|bmp|woff|woff2|svg)$ {
        add_header Access-Control-Allow-Origin *;
        access_log off;
        expires 10d;
        break;
    }

    # Modx-friendly redirect rule
    location @modx-rewrite {
        rewrite ^/(.*)$ /index.php?q=$1;
    }

    # Block access to any config.core.php file in any location
    location ~* ^/.*config\.core\.php$ {
        return 404;
    }

    # Block access to hidden files (e.g., .htaccess, .git, etc.)
    location ~ /\.(?!well-known).* {
        return 404;
    }

    # Block access to the 'core' directory completely
    location ^~ /core/ {
        deny all; # Denies all access (403 Forbidden)
    }

    # Pass PHP files to FastCGI for processing
    location ~ \.php$ {
        try_files $uri $uri/ @modx-rewrite;

        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /var/www/html$fastcgi_script_name;
        fastcgi_pass   php:9000;
    }

    # Redirect requests to index.php if file or directory does not exist
    location / {
        try_files $uri $uri/ @modx-rewrite;
        absolute_redirect off;
    }
}
